{"version":3,"sources":["components/AppStyled.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Notifications/NotificationsStyled.js","components/Notifications/Notifications.js","components/App.js","index.js"],"names":["Container","styled","div","Form","form","ContactForm","state","name","number","handleSubmit","evt","preventDefault","props","onSubmit","setState","handleChange","currentTarget","value","this","id","className","type","onChange","placeholder","Component","Div","ContactList","contacts","onDeleteContact","TransitionGroup","component","map","CSSTransition","timeout","classNames","onClick","Label","label","Filter","Empty","ByUsed","App","filter","showEmptyNtf","showByUsedNtf","addContact","contact","shortid","generate","find","toLowerCase","trim","delContact","contactId","getContacts","includes","changeFilter","localStorage","getItem","contactsFromLS","JSON","parse","length","_","prevState","prevContacts","nextContacts","setItem","stringify","filteredContacts","in","appear","unmountOnExit","onEntered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a71f8adb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .h1Title {\n    text-align: center;\n    margin-bottom: 30px;\n    font-size: 46px;\n    color: honeydew;\n  }\n\n  .h2Title {\n    margin-bottom: 30px;\n    font-size: 32px;\n    color: honeydew;\n  }\n\n  .text {\n    font-size: 18px;\n    font-style: italic;\n    color: salmon;\n  }\n\n  .h1-appear {\n    transform: translateX(-300%);\n  }\n\n  .h1-appear-active {\n    transform: translateX(0);\n    transition: transform 500ms linear;\n  }\n\n  .filterScale-enter {\n    opacity: 0;\n    transform: scale(0.1);\n  }\n\n  .filterScale-enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 250ms linear;\n  }\n\n  .filterScale-exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  .filterScale-exit-active {\n    opacity: 0;\n    transform: scale(0.1);\n    transition: all 250ms linear;\n  }\n\n  .ntf-enter {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n\n  .ntf-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms linear;\n  }\n\n  .ntf-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  .ntf-exit-active {\n    opacity: 0;\n    transform: translateX(100%);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Form = styled.form`\n  padding: 10px;\n  margin-bottom: 50px;\n  border: 1px dotted orange;\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    color: honeydew;\n    font-size: 22px;\n    font-weight: 700;\n  }\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .submitBtn {\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n    min-width: 80px;\n    height: 25px;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    background-color: honeydew;\n    color: black;\n    font-weight: 700;\n    font-size: 14px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: springgreen;\n    }\n  }\n`;\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"./ContactFormStyled\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form id=\"contact\" onSubmit={this.handleSubmit}>\n        <label className=\"label\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\"Type to name\"\n          />\n        </label>\n\n        <label className=\"label\">\n          Phone number\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            placeholder=\"Type to phone(e.g. 111-11-11)\"\n          />\n        </label>\n\n        <button type=\"submit\" className=\"submitBtn\">\n          Add contact\n        </button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  .contactList__item {\n    width: 400px;\n    display: flex;\n    justify-content: space-around;\n    align-items: baseline;\n    color: springgreen;\n    font-size: 19px;\n    font-weight: 500;\n\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n\n  .delBtn {\n    display: flex;\n    align-items: center;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    min-width: 20px;\n    height: 25px;\n    padding: 10px;\n    background-color: honeydew;\n    color: black;\n    font-weight: 500;\n    font-size: 12px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: salmon;\n    }\n  }\n\n  .itemFade-enter {\n    opacity: 0;\n    transform: translateX(200%);\n  }\n\n  .itemFade-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms linear;\n  }\n\n  .itemFade-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  .itemFade-exit-active {\n    opacity: 0;\n    transform: translateX(200%);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Div;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Div from \"./ContactListStyled\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <Div>\n      <TransitionGroup component=\"ul\">\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"itemFade\">\n            <li className=\"contactList__item\">\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                className=\"delBtn\"\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </Div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: honeydew;\n  font-size: 22px;\n  font-weight: 700;\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n`;\n\nexport default Label;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Label from \"./FilterStyled\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input className=\"input\" type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  right: 3%;\n  bottom: 80%;\n  text-align: center;\n  padding: 10px;\n  min-width: 100px;\n  height: 70px;\n  background-color: orange;\n  color: black;\n`;\n\nexport default Div;\n","import Div from \"./NotificationsStyled\";\n\nexport const Empty = () => {\n  return (\n    <Div>\n      <p>Enter the contact's name and(or) phone number!</p>\n    </Div>\n  );\n};\n\nexport const ByUsed = () => {\n  return (\n    <Div>\n      <p>Is already in use!</p>\n    </Div>\n  );\n};\n","import React, { Component } from \"react\";\nimport Container from \"./AppStyled\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport { Empty, ByUsed } from \"./Notifications/Notifications\";\nimport { CSSTransition } from \"react-transition-group\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    showEmptyNtf: false,\n    showByUsedNtf: false,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const contactsFromLS = JSON.parse(contacts);\n\n    if (contactsFromLS) {\n      contactsFromLS.length && this.setState({ contacts: [...contactsFromLS] });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (prevContacts !== nextContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setState((state) => ({ showByUsedNtf: !state.showByUsedNtf }));\n    } else if (contacts.find((contact) => contact.number === number)) {\n      this.setState((state) => ({ showByUsedNtf: !state.showByUsedNtf }));\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      this.setState((state) => ({ showEmptyNtf: !state.showEmptyNtf }));\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  delContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  changeFilter = (evt) => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter, showEmptyNtf, showByUsedNtf } = this.state;\n    const filteredContacts = this.getContacts();\n\n    return (\n      <Container>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"h1\"\n          unmountOnExit\n        >\n          <h1 className=\"h1Title\">Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className=\"h2Title\">Contacts</h2>\n\n        <CSSTransition\n          in={contacts.length > 1}\n          classNames=\"filterScale\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter value={filter} onChange={this.changeFilter} />\n        </CSSTransition>\n\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.delContact}\n        />\n\n        {!contacts.length && (\n          <p className=\"text\">Your phonebook is empty. Please add contact.</p>\n        )}\n\n        <CSSTransition\n          in={showEmptyNtf}\n          onEntered={() => this.setState({ showEmptyNtf: false })}\n          timeout={2000}\n          classNames=\"ntf\"\n          unmountOnExit\n        >\n          <Empty />\n        </CSSTransition>\n\n        <CSSTransition\n          in={showByUsedNtf}\n          onEntered={() => this.setState({ showByUsedNtf: false })}\n          timeout={2000}\n          classNames=\"ntf\"\n          unmountOnExit\n        >\n          <ByUsed />\n        </CSSTransition>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./base.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}